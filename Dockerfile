# Use Debian Bookworm as the base image
# TODO: comment
FROM docker.s.thusaac.com:12711/library/debian:bookworm AS BUILDER
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
# RUN sed -i 's|http://deb.debian.org/|https://mirrors.tuna.tsinghua.edu.cn/|g' /etc/apt/sources.list.d/debian.sources
RUN apt-get update
# dependency generated by ChatGPT
RUN apt-get install -y \
    build-essential \
    make \
    gcc \
    g++ \
    autoconf \
    automake \
    libtool \
    pkg-config \
    zlib1g-dev \
    libbz2-dev \
    liblzma-dev \
    python3 \
    python3-venv \
    python3-pip

# Set the working directory
WORKDIR /app
# Ensure the virtual environment is activated automatically

# Copy files from the host into the container
COPY Umicollapse  /app/Umicollapse
COPY hisat-3n  /app/hisat-3n
COPY htslib /app/htslib
COPY samtools /app/samtools
COPY build.sh /app/build.sh
RUN chmod +x build.sh && ./build.sh

# Use Debian Bookworm as the base image
FROM docker.s.thusaac.com:12711/library/debian:bookworm
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update
RUN apt-get install -y openjdk-17-jre-headless
RUN apt-get install -y python3
RUN apt-get install -y python3-pip
RUN apt-get install -y python3-venv
RUN apt-get install -y numactl

WORKDIR /app
COPY --from=builder /app /app

# Setup python
RUN python3 -m venv venv
ENV PATH="venv/bin:$PATH"
RUN pip install --upgrade pip
RUN pip install cutseq snakemake polars scipy
COPY m5C-UBSseq /app/m5C-UBSseq

RUN mkdir /data
# Set the default command
CMD ["bash"]

COPY Snakefile* /app/
